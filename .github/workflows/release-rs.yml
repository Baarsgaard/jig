name: "Release"

on:
  workflow_dispatch:

jobs:
  get-tag:
    name: "Get Tag From Package Version"
    runs-on: self-hosted
    outputs:
      crate-version: ${{ steps.crate-version.outputs.PKG_VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: "Get tag"
        id: "crate-version"
        shell: "bash"
        run: |
          echo PKG_VERSION=$(awk -F ' = ' '$1 ~ /version/ { gsub(/["]/, "", $2); printf("%s",$2) }' Cargo.toml) >> $GITHUB_OUTPUT

  create-release:
    name: "Create release"
    needs:
      - get-tag
    runs-on: ubuntu-latest
    steps:
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ needs.get-tag.outputs.crate-version}}"
          prerelease: true
          title: "Development Build"
          files: |
            LICENSE.txt
            *.jar
          upload-binaries:

  build:
    name: "Build binaries and upload as artifacts"
    needs:
      - get-tag
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"

      - run: "cargo build --release --target ${{ matrix.target }}"

      - uses: actions/upload-artifact@v3
        with:
          name: "jig-${{ matrix.target }}"
          path: target/release/jig

  upload-binaries:
    name: "Create release"
    needs:
      - get-tag
      - build
    runs-on: self-hosted
    strategy:
      fail-fast: true
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - arm-unknown-linux-gnueabi
          - armv7-unknown-linux-gnueabihf
          - i686-unknown-linux-gnu
          - i686-unknown-linux-musl
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-gnu
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: "jig-${{ matrix.target }}"

#      upload assets to release here
